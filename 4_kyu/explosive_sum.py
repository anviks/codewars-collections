"""
https://www.codewars.com/kata/52ec24228a515e620b0005ef

**Explosive Sum**

How many ways can you make the sum of a number?

From wikipedia: https://en.wikipedia.org/wiki/Partition_(number_theory)

In number theory and combinatorics, a partition of a positive integer n, also called an integer partition,
is a way of writing n as a sum of positive integers. Two sums that differ only in the order of their summands
are considered the same partition. If order matters, the sum becomes a composition. For example, 4 can be
partitioned in five distinct ways:
    4\n
    3 + 1\n
    2 + 2\n
    2 + 1 + 1\n
    1 + 1 + 1 + 1\n

Examples:
    ``exp_sum(1) # 1``\n
    ``exp_sum(2) # 2  -> 1+1 , 2``\n
    ``exp_sum(3) # 3 -> 1+1+1, 1+2, 3``\n
    ``exp_sum(4) # 5 -> 1+1+1+1, 1+1+2, 1+3, 2+2, 4``\n
    ``exp_sum(5) # 7 -> 1+1+1+1+1, 1+1+1+2, 1+1+3, 1+2+2, 1+4, 5, 2+3``\n

    ``exp_sum(10) # 42``\n
    ``exp_sum(50) # 204226``\n
    ``exp_sum(80) # 15796476``\n
    ``exp_sum(100) # 190569292``\n
"""
import sys
import time
import timeit


def memoize(func):
    cache = {}

    def wrapper(n):
        if n not in cache:
            cache[n] = func(n)
        return cache[n]

    return wrapper


@memoize
def exp_sum(n: int) -> int:
    """
    Ten times faster than exp_sum_2, but raises an error for n > 3000.
    """
    if n < 0:
        return 0
    if n == 0:
        return 1
    if n <= 3:
        return n
    counter = 1
    counter_odd = 1
    temp_n = n
    result = 0
    while temp_n > 3:
        temp_n -= counter_odd
        result += exp_sum(temp_n)
        temp_n -= counter
        result += exp_sum(temp_n)
        counter += 1
        counter_odd += 2

        temp_n -= counter_odd
        result -= exp_sum(temp_n)
        temp_n -= counter
        result -= exp_sum(temp_n)
        counter += 1
        counter_odd += 2

    return result


def exp_sum_2(n: int) -> int:
    """
    Ten times slower than exp_sum, but doesn't raise an error for n > 3000. Generated by ChatGPT.
    """
    dp = [0] * (n + 1)
    dp[0] = 1

    for i in range(1, n + 1):
        for j in range(i, n + 1):
            dp[j] += dp[j - i]

    return dp[n]


if __name__ == '__main__':
    print(exp_sum(1))  # 1
    print(exp_sum(2))  # 2  -> 1+1 , 2
    print(exp_sum(3))  # 3 -> 1+1+1, 1+2, 3
    print(exp_sum(4))  # 5 -> 1+1+1+1, 1+1+2, 1+3, 2+2, 4
    print(exp_sum(5))  # 7 -> 1+1+1+1+1, 1+1+1+2, 1+1+3, 1+2+2, 1+4, 2+3, 5
    print(exp_sum_2(6))  # 11 -> 1+1+1+1+1+1, 1+1+1+1+2, 1+1+1+3, 1+1+2+2, 1+1+4, 1+5, 1+2+3, 2+2+2, 2+4, 3+3, 6
    print(exp_sum(7))  # 15 -> 1+1+1+1+1+1+1, 1+1+1+1+1+2, 1+1+1+1+3, 1+1+1+2+2, 1+1+1+4, 1+1+5, 1+1+2+3, 1+2+2+2
    # 1+2+4, 1+3+3, 1+6, 2+2+3, 2+5, 3+4, 7
    print(exp_sum(8))  # 22 -> 1+1+1+1+1+1+1+1, 1+1+1+1+1+1+2, 1+1+1+1+1+3, 1+1+1+1+2+2, 1+1+1+1+4, 1+1+1+5, 1+1+1+2+3
    # 1+1+2+2+2, 1+1+2+4, 1+1+3+3, 1+1+6, 1+2+2+3, 1+2+5, 1+3+4, 1+7, 2+2+2+2, 2+2+4, 2+3+3, 2+6, 3+5, 4+4, 8
    print(exp_sum(9))  # 30 -> 1+1+1+1+1+1+1+1+1, 1+1+1+1+1+1+1+2, 1+1+1+1+1+1+3, 1+1+1+1+1+2+2, 1+1+1+1+1+4, 1+1+1+1+5
    # 1+1+1+2+2+2, 1+1+1+2+4, 1+1+1+3+3, 1+1+1+6, 1+1+2+2+3, 1+1+2+5, 1+1+3+4, 1+1+7, 1+2+2+2+2, 1+2+2+4, 1+2+3+3
    # 1+2+6, 1+3+5, 1+4+4, 1+8, 2+2+2+3, 2+2+5, 2+3+4, 2+7, 3+3+3, 3+6, 4+5, 9
    print(exp_sum(10))  # 42 -> 1+1+1+1+1+1+1+1+1+1, 1+1+1+1+1+1+1+1+2, 1+1+1+1+1+1+1+3, 1+1+1+1+1+1+4, 1+1+1+1+1+5
    # 1+1+1+1+6, 1+1+1+7, 1+1+8, 1+9, 10, 1+1+1+1+1+1+2+2, 1+1+1+1+2+2+2, 1+1+1+1+2+4, 1+1+1+1+3+3, 1+1+1+2+2+3, 1+1+1+2+5, 1+1+1+3+4
    # 1+1+2+2+2+2, 1+1+2+2+4, 1+1+2+3+3, 1+1+2+6, 1+1+3+5, 1+1+4+4, 1+2+2+2+3, 1+2+2+5, 1+2+3+4, 1+2+7, 1+3+3+3
    # 1+3+6, 1+4+5, 2+2+2+2+2, 2+2+2+4, 2+2+3+3, 2+2+6, 2+3+5, 2+4+4, 2+8, 3+3+4, 3+7, 4+6, 5+5
    print()

    print(exp_sum(50))  # 204226
    print(exp_sum(80))  # 15796476
    print(exp_sum(100))  # 190569292

    print(exp_sum(200))  # 487067745
    print(exp_sum(300))  # 2938640830
    print(exp_sum(400))  # 10023803371
    print(exp_sum(500))  # 25507446896
    sys.setrecursionlimit(2_147_483_647)
    sys.set_int_max_str_digits(2_147_483_647)
    start = time.time()
    print(exp_sum(3000))  # 24061467864032622473692149727991
    print(time.time() - start)
    start = time.time()
    print(exp_sum_2(3000))  # 24061467864032622473692149727991
    print(time.time() - start)
    # print(exp_sum(10000))
    print(exp_sum_2(10000))
